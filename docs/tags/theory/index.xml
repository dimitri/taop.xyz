<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Theory on The Art of PostgreSQL</title>
    <link>https://theartofpostgresql.com/tags/theory/</link>
    <description>Recent content in Theory on The Art of PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 07 Sep 2019 22:55:00 +0200</lastBuildDate><atom:link href="https://theartofpostgresql.com/tags/theory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The R in ORM</title>
      <link>https://theartofpostgresql.com/blog/2019-09-the-r-in-orm/</link>
      <pubDate>Sat, 07 Sep 2019 22:55:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-the-r-in-orm/</guid>
      <description>&lt;p&gt;Ok, let&amp;rsquo;s face it, I like SQL. A lot. I think it&amp;rsquo;s a fine DSL given how
powerful it is, and I respect its initial goal to attract non developers and
try to build English sentences rather than code.&lt;/p&gt;
&lt;p&gt;Also, I understand that manually hydrating your collection of objects in
your backend developement language is not the best use of your time. And
that building SQL as strings makes your code ugly. I get it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is an SQL JOIN?</title>
      <link>https://theartofpostgresql.com/blog/2019-09-sql-joins/</link>
      <pubDate>Sat, 07 Sep 2019 21:30:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-sql-joins/</guid>
      <description>&lt;p&gt;It took me quite some time before I could reason efficiently about SQL
JOINs. And I must admit, the set theory diagrams never helped me really
understand JOINs in SQL. So today, I want to help you understand JOINs in a
different way, hoping to make the concept click at once for you too!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is an SQL relation?</title>
      <link>https://theartofpostgresql.com/blog/2019-09-sql-relations/</link>
      <pubDate>Sat, 07 Sep 2019 21:00:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-sql-relations/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re like me, understanding SQL is taking you a long time. And some
efforts. It took me years to get a good mental model of how SQL queries are
implemented, and then up from the lower levels, to build a mental model of
how to reason in SQL.&lt;/p&gt;
&lt;p&gt;Nowadays, in most case, I can think in terms of SQL and write queries that
will give me the result set I need. In most cases, because some parts of SQL
are still complex, and I don&amp;rsquo;t practice as much as I used to. In particular,
newer PostgreSQL features are areas I still need to work with more before I
can integrate them in my daily workflow.&lt;/p&gt;
&lt;p&gt;Today, I want to introduce the central concept of the SQL language. What is
an SQL relation?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Art of PostgreSQL</title>
    <link>https://theartofpostgresql.com/</link>
    <description>Recent content on The Art of PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Dec 2019 23:15:00 +0200</lastBuildDate><atom:link href="https://theartofpostgresql.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>pgDay Paris 2019 presentation: How to write SQL queries?</title>
      <link>https://theartofpostgresql.com/blog/2019-12-25-pgdayparis/</link>
      <pubDate>Wed, 25 Dec 2019 23:15:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-12-25-pgdayparis/</guid>
      <description>&lt;p&gt;The videos from &lt;a href=&#34;https://2019.pgday.paris&#34;&gt;pgDay Paris 2019&lt;/a&gt; are online, and
they look stunning! If you&amp;rsquo;ve been to the conference, you will be able to
enjoy great memories, and if you&amp;rsquo;ve not been there, you can now enjoy all
the fine content that was recorded there at the &lt;a href=&#34;https://www.youtube.com/channel/UCiOSEHQe91goxYNJDjj2rLw/videos&#34;&gt;Youtube Channel for
pgDay.Paris&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This year at pgday Paris I tried something new. My presentation was
interactive, and I&amp;rsquo;ve been writing queries together with the audience,
making mistakes, loosing keystrokes and having all the fun!&lt;/p&gt;
&lt;p&gt;The idea behind looking like a fool writing queries in front of an audience
was to show the process behind those elegant queries that we tend to share
in one piece, on a slide where they shine, beautifully indented. We don&amp;rsquo;t
get to those queries writing them like we would prose. It takes multiple
iterations to get there. From something quite simple to something more and
more sophisticated, until we have exactly the result set we are interested
in.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Black Friday &amp; Cyber Monday</title>
      <link>https://theartofpostgresql.com/blog/2019-11-black-friday/</link>
      <pubDate>Fri, 29 Nov 2019 17:15:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-11-black-friday/</guid>
      <description>Today is Black Friday, then followed by a week end that leads directly to Cyber Monday. This is a period where you can find great deals online, with many discounts. I&amp;rsquo;ll make it short, because we all are busy, right?
From today to Monday included my book The Art of PostgreSQL is available at a 50% discount with the coupon “BLACKFRIDAY2019”. Enjoy!</description>
    </item>
    
    <item>
      <title>PostgreSQL Query Plan Visualizer</title>
      <link>https://theartofpostgresql.com/explain-plan-visualizer/</link>
      <pubDate>Wed, 06 Nov 2019 21:45:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/explain-plan-visualizer/</guid>
      <description>Postgres Query Planning PostgreSQL provides advanced tooling to understand how it executes SQL queries. The execution of a query follows specific steps:
Parsing Planning Optimization Execution When it comes to the execution step, all Postgres does is follow the selected optimized plan. It is possible to ask Postgres for the query plan and inspect it, in order to better understand the execution of any query and then when necessary find a way to execute the same query faster.</description>
    </item>
    
    <item>
      <title>Compute database size</title>
      <link>https://theartofpostgresql.com/compute-database-size/</link>
      <pubDate>Mon, 14 Oct 2019 00:05:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/compute-database-size/</guid>
      <description>It is well known that database design should be as simple as possible, and follow the normalization process. Except in some cases, sometimes, for scalability purposes. Partitioning might be used to help deal with large amount of data for instance.
But what is a large amount of data? Do you need to pay attention to those scalability trade-offs now, or can you wait until later? How far can you go with a naive schema?</description>
    </item>
    
    <item>
      <title>Table of Content</title>
      <link>https://theartofpostgresql.com/table-of-content/</link>
      <pubDate>Mon, 14 Oct 2019 00:05:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/table-of-content/</guid>
      <description>Each part of The Art of PostgreSQL can be read on its own, or you can read this book from the first to the last page in the order of the parts and chapters therein. A great deal of thinking have been put in the ordering of the parts, so that reading “The Art of PostgreSQL” in a linear fashion should provide the best experience.
The skill progression throughout the book is not linear.</description>
    </item>
    
    <item>
      <title>Why Postgres?</title>
      <link>https://theartofpostgresql.com/blog/2019-09-why-postgres/</link>
      <pubDate>Fri, 27 Sep 2019 15:15:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-why-postgres/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;That&amp;rsquo;s a very popular question to ask these days, it seems. The quick answer
is easy and is the slogan of PostgreSQL, as seen on the community website
for it: “PostgreSQL: The World&amp;rsquo;s Most Advanced Open Source Relational
Database”. What does that mean for you, the developer?&lt;/p&gt;
&lt;p&gt;In my recent article &lt;a href=&#34;http://localhost:1313/blog/2019-09-postgresopen/&#34;&gt;The Art of PostgreSQL: The Transcript, part I
&lt;/a&gt; you will read why I
think it&amp;rsquo;s interesting to use Postgres in your application&amp;rsquo;s stack. My
conference talk addresses the main area where I think many people get it
wrong:&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Art of PostgreSQL: The Transcript, part III</title>
      <link>https://theartofpostgresql.com/blog/2019-09-postgresopen-part-iii/</link>
      <pubDate>Wed, 25 Sep 2019 11:14:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-postgresopen-part-iii/</guid>
      <description>&lt;p&gt;This article is a transcript of the conference I gave at Postgres Open 2019,
titled the same as the book: &lt;a href=&#34;https://theartofpostgresql.com&#34;&gt;The Art of
PostgreSQL&lt;/a&gt;. It&amp;rsquo;s availble as a video online
at Youtube if you want to watch the slides and listen to it, and it even has
a subtext!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Art of PostgreSQL: The Transcript, part II</title>
      <link>https://theartofpostgresql.com/blog/2019-09-postgresopen-part-ii/</link>
      <pubDate>Mon, 23 Sep 2019 12:15:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-postgresopen-part-ii/</guid>
      <description>&lt;p&gt;This article is a transcript of the conference I gave at Postgres Open 2019,
titled the same as the book: &lt;a href=&#34;https://theartofpostgresql.com&#34;&gt;The Art of
PostgreSQL&lt;/a&gt;. It&amp;rsquo;s availble as a video online
at Youtube if you want to watch the slides and listen to it, and it even has
a subtext!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Art of PostgreSQL: The Transcript, part I</title>
      <link>https://theartofpostgresql.com/blog/2019-09-postgresopen/</link>
      <pubDate>Fri, 20 Sep 2019 20:15:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-postgresopen/</guid>
      <description>&lt;p&gt;This article is a transcript of the conference I gave at Postgres Open 2019,
titled the same as the book: &lt;a href=&#34;https://theartofpostgresql.com&#34;&gt;The Art of
PostgreSQL&lt;/a&gt;. It&amp;rsquo;s availble as a video online
at Youtube if you want to watch the slides and listen to it, and it even has
a subtext!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Learn SQL?</title>
      <link>https://theartofpostgresql.com/blog/2019-09-how-to-learn-sql/</link>
      <pubDate>Tue, 17 Sep 2019 00:15:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-how-to-learn-sql/</guid>
      <description>&lt;p&gt;Here we are, another SQL query to write. You wish you knew how to write that
mechanically, like you would a loop in your favorite programming language.
Or at least have a pretty clear idea of a skeleton to tweak until it gives
the result set you expect. So instead of working on your SQL query, you
google &lt;a href=&#34;#&#34;&gt;How to write a SQL query?&lt;/a&gt; or maybe even &lt;a href=&#34;#&#34;&gt;How to learn SQL?&lt;/a&gt;
Right. I feel you, I&amp;rsquo;ve been there too, even if quite some time ago…&lt;/p&gt;
&lt;p&gt;So here my article where I teach you how to learn SQL.&lt;/p&gt;
&lt;p&gt;I want to share with you how I did it, and how I continue to do it. There&amp;rsquo;s
no magic secret sauce to it though, it&amp;rsquo;s all basic work. Again, we have to
learn the main concepts and how they play together, then practice simple
steps, and then build from there.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The R in ORM</title>
      <link>https://theartofpostgresql.com/blog/2019-09-the-r-in-orm/</link>
      <pubDate>Sat, 07 Sep 2019 22:55:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-the-r-in-orm/</guid>
      <description>&lt;p&gt;Ok, let&amp;rsquo;s face it, I like SQL. A lot. I think it&amp;rsquo;s a fine DSL given how
powerful it is, and I respect its initial goal to attract non developers and
try to build English sentences rather than code.&lt;/p&gt;
&lt;p&gt;Also, I understand that manually hydrating your collection of objects in
your backend developement language is not the best use of your time. And
that building SQL as strings makes your code ugly. I get it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is an SQL Aggregate?</title>
      <link>https://theartofpostgresql.com/blog/2019-09-sql-aggregates/</link>
      <pubDate>Sat, 07 Sep 2019 22:00:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-sql-aggregates/</guid>
      <description>&lt;p&gt;In our previous articles we had a look at &lt;a href=&#34;https://theartofpostgresql.com/blog/2019-09-sql-relations/&#34;&gt;What is an SQL
relation?&lt;/a&gt; and &lt;a href=&#34;https://theartofpostgresql.com/blog/2019-09-sql-joins/&#34;&gt;What is a SQL
JOIN?&lt;/a&gt;. Today, I want to show you what is an
aggregate in SQL.&lt;/p&gt;
&lt;p&gt;You might have heard about Map/Reduce when Google made it famous, or maybe
some years before, or maybe some years later. The general processing
functions &lt;code&gt;map&lt;/code&gt; and &lt;code&gt;reduce&lt;/code&gt; where invented a very long time ago. The
novelty from the advertising giant was in using them in a heavily
distributed programming context.&lt;/p&gt;
&lt;p&gt;With &lt;code&gt;map&lt;/code&gt; you apply the same processing to every object in a collection.
With &lt;code&gt;reduce&lt;/code&gt;, you compute a result per collection of object. In SQL we know
how to do that too, and we call that an aggregate.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is an SQL JOIN?</title>
      <link>https://theartofpostgresql.com/blog/2019-09-sql-joins/</link>
      <pubDate>Sat, 07 Sep 2019 21:30:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-sql-joins/</guid>
      <description>&lt;p&gt;It took me quite some time before I could reason efficiently about SQL
JOINs. And I must admit, the set theory diagrams never helped me really
understand JOINs in SQL. So today, I want to help you understand JOINs in a
different way, hoping to make the concept click at once for you too!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What is an SQL relation?</title>
      <link>https://theartofpostgresql.com/blog/2019-09-sql-relations/</link>
      <pubDate>Sat, 07 Sep 2019 21:00:00 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2019-09-sql-relations/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re like me, understanding SQL is taking you a long time. And some
efforts. It took me years to get a good mental model of how SQL queries are
implemented, and then up from the lower levels, to build a mental model of
how to reason in SQL.&lt;/p&gt;
&lt;p&gt;Nowadays, in most case, I can think in terms of SQL and write queries that
will give me the result set I need. In most cases, because some parts of SQL
are still complex, and I don&amp;rsquo;t practice as much as I used to. In particular,
newer PostgreSQL features are areas I still need to work with more before I
can integrate them in my daily workflow.&lt;/p&gt;
&lt;p&gt;Today, I want to introduce the central concept of the SQL language. What is
an SQL relation?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
